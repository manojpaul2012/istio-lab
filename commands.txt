ISTIO INSTALL

curl -L https://istio.io/downloadIstio | sh -\


cd istio-1.26.1
export PATH=$PWD/bin:$PATH

ls bin
istioctl install --set profile=demo -y
kubectl label namespace default istio-injection=enabled
kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml\

kubectl get services
kubectl get pods

kubectl get crd gateways.gateway.networking.k8s.io &> /dev/null || \\
{ kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=v1.3.0" | kubectl apply -f -; }


kubectl exec "$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl -sS productpage:9080/productpage | grep -o "<title>.*</title>"\



kubectl edit pod productpage-v1-54bb874995-x694q
kubectl apply -f samples/bookinfo/gateway-api/bookinfo-gateway.yaml\
kubectl annotate gateway bookinfo-gateway networking.istio.io/service-type=ClusterIP --namespace=default
kubectl get gateway
kubectl port-forward svc/bookinfo-gateway-istio 8080:80

minikube tunnel

vi old-version.yaml
kubectl apply -f old-version.yaml
vi dr.yaml
kubectl apply -f dr.yaml
ubectl edit dr reviews
minikube tunnel
vi canary.yaml
kubectl apply -f canary.yaml
kubectl get mutatingwebhookconfiguration
kubectl edit mutatingwebhoookconfiguration istio-sidecar-injector
kubectl edit mutatingwebhoookconfiguration istio-sidecar-injector
kubectl edit mutatingwebhookconfiguration istio-sidecar-injector





DASHBOARD

kubectl -n istio-system get svc kiali

kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.26/samples/addons/kiali.yaml

kubectl -n istio-system get svc kiali

kubectl get destinationrules -o yaml

watch -n 1 curl -o /dev/null -s -w %{http_code} $GATEWAY_URL/productpage\

istioctl dashboard kiali\

istioctl dashboard kiali\



CIRCUIT BREAKING

kubectl apply -f samples/httpbin/httpbin.yaml\

kubectl apply -f - <<EOF\
apiVersion: networking.istio.io/v1\
kind: DestinationRule\
metadata:\
  name: httpbin\
spec:\
  host: httpbin\
  trafficPolicy:\
    connectionPool:\
      tcp:\
        maxConnections: 1\
      http:\
        http1MaxPendingRequests: 1\
        maxRequestsPerConnection: 1\
    outlierDetection:\
      consecutive5xxErrors: 1\
      interval: 1s\
      baseEjectionTime: 3m\
      maxEjectionPercent: 100\
EOF\

kubectl get destinationrule httpbin -o yaml\

kubectl apply -f samples/httpbin/sample-client/fortio-deploy.yaml\

export FORTIO_POD=$(kubectl get pods -l app=fortio -o 'jsonpath={.items[0].metadata.name}')
kubectl exec "$FORTIO_POD" -c fortio -- /usr/bin/fortio curl -quiet http://httpbin:8000/get
kubectl exec "$FORTIO_POD" -c fortio -- /usr/bin/fortio load -c 2 -qps 0 -n 20 -loglevel Warning http://httpbin:8000/get\

kubectl exec "$FORTIO_POD" -c fortio -- /usr/bin/fortio load -c 3 -qps 0 -n 30 -loglevel Warning http://httpbin:8000/get\

kubectl exec "$FORTIO_POD" -c istio-proxy -- pilot-agent request GET stats | grep httpbin | grep pending\

kubectl delete destinationrule httpbin\

kubectl delete -f samples/httpbin/sample-client/fortio-deploy.yaml\
kubectl delete -f samples/httpbin/httpbin.yaml\


